/*Collections */

task> use task
already on db task
  
task> db.topics.insertMany([
...   { _id: 101, name: "HTML Basics", month: "October", date: new Date("2020-10-10") },
...   { _id: 102, name: "CSS Grid", month: "October", date: new Date("2020-10-15") },
...   { _id: 103, name: "JavaScript", month: "November", date: new Date("2020-11-01") },
...   { _id: 104, name: "ReactJS", month: "November", date: new Date("2020-11-20") }
... ]);
{
  acknowledged: true,
  insertedIds: { '0': 101, '1': 102, '2': 103, '3': 104 }
}

task> db.tasks.insertMany([
...   { _id: 201, topic_id: 101, title: "Basic HTML Form", due_date: new Date("2020-10-12"), status: "Completed" },
...   { _id: 202, topic_id: 102, title: "CSS Flexbox", due_date: new Date("2020-10-18"), status: "Pending" },
...   { _id: 203, topic_id: 103, title: "JS Functions", due_date: new Date("2020-11-05"), status: "Completed" },
...   { _id: 204, topic_id: 104, title: "React Components", due_date: new Date("2020-11-25"), status: "Pending" }
... ]);
{
  acknowledged: true,
  insertedIds: { '0': 201, '1': 202, '2': 203, '3': 204 }
}

task> db.mentors.insertMany([
...   { _id: 301, company_name: "Google", date: new Date("2020-10-20"), users_appeared: [1, 3] },
...   { _id: 302, company_name: "Microsoft", date: new Date("2020-10-28"), users_appeared: [2, 4] },
...   { _id: 303, company_name: "Amazon", date: new Date("2020-11-15"), users_appeared: [1, 4, 5] }
... ]);

{ acknowledged: true, insertedIds: { '0': 301, '1': 302, '2': 303 } }
...   { _id: 401, name: "John Doe", mentees_count: 20 },
...   { _id: 402, name: "Jane Smith", mentees_count: 12 },
...   { _id: 403, name: "Alex Johnson", mentees_count: 18 }
... ]);

{ acknowledged: true, insertedIds: { '0': 401, '1': 402, '2': 403 } }
...   { user_id: 1, user_name: "Alice", problems_solved: 50 },
...   { user_id: 2, user_name: "Bob", problems_solved: 75 },
...   { user_id: 3, user_name: "Charlie", problems_solved: 40 },
...   { user_id: 4, user_name: "Diana", problems_solved: 60 },
...   { user_id: 5, user_name: "Eve", problems_solved: 30 }
... ]);

{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('674a9c9910c028c20c0d8190'),
    '1': ObjectId('674a9c9910c028c20c0d8191'),
    '2': ObjectId('674a9c9910c028c20c0d8192'),
    '3': ObjectId('674a9c9910c028c20c0d8193'),
    '4': ObjectId('674a9c9910c028c20c0d8194')
  }
}

...   { user_id: 1, date: new Date("2020-10-20"), attendance: "Present" },
...   { user_id: 2, date: new Date("2020-10-20"), attendance: "Absent" },
...   { user_id: 3, date: new Date("2020-10-28"), attendance: "Present" },
...   { user_id: 4, date: new Date("2020-10-28"), attendance: "Absent" },
...   { user_id: 5, date: new Date("2020-11-15"), attendance: "Present" }
... ]);

{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('674a9cb210c028c20c0d8195'),
    '1': ObjectId('674a9cb210c028c20c0d8196'),
    '2': ObjectId('674a9cb210c028c20c0d8197'),
    '3': ObjectId('674a9cb210c028c20c0d8198'),
    '4': ObjectId('674a9cb210c028c20c0d8199')
  }
}

Queries:

/* Find all the topics and tasks which are taught in the month of October */
task> db.topics.aggregate([
...   {
...     $lookup: {
...       from: "tasks",
...       localField: "_id",
...       foreignField: "topic_id",
...       as: "related_tasks"
...     }
...   },
...   {
...     $match: {
...       date: {
...         $gte: ISODate("2020-10-01"),
...         $lte: ISODate("2020-10-31")
...       }
...     }
...   },
...   {
...     $project: {
...       topic: 1,
...       date: 1,
...       related_tasks: 1
...     }
...   }
... ]);
[
  {
    _id: 101,
    date: ISODate('2020-10-10T00:00:00.000Z'),
    related_tasks: [
      {
        _id: 201,
        topic_id: 101,
        title: 'Basic HTML Form',
        due_date: ISODate('2020-10-12T00:00:00.000Z'),
        status: 'Completed'
      }
    ]
  },
  {
    _id: 102,
    date: ISODate('2020-10-15T00:00:00.000Z'),
    related_tasks: [
      {
        _id: 202,
        topic_id: 102,
        title: 'CSS Flexbox',
        due_date: ISODate('2020-10-18T00:00:00.000Z'),
        status: 'Pending'
      }
    ]
  }
]
  
/* Find all the company drives which appeared between 15 Oct 2020 and 31 Oct 2020 */
task> db.company_drives.find({
...   date: {
...     $gte: ISODate("2020-10-15"),
...     $lte: ISODate("2020-10-31")
...   }
... });
[
  {
    _id: 301,
    company_name: 'Google',
    date: ISODate('2020-10-20T00:00:00.000Z'),
    users_appeared: [ 1, 3 ]
  },
  {
    _id: 302,
    company_name: 'Microsoft',
    date: ISODate('2020-10-28T00:00:00.000Z'),
    users_appeared: [ 2, 4 ]
  }
]

/* Find all the company drives and students who appeared for the placement */
task> db.company_drives.aggregate([
...   {
...     $lookup: {
...       from: "users",
...       localField: "users_appeared",
...       foreignField: "_id",
...       as: "students"
...     }
...   },
...   {
...     $project: {
...       company_name: 1,
...       date: 1,
...       students: { name: 1, email: 1 }
...     }
...   }
... ]);
[
  {
    _id: 301,
    company_name: 'Google',
    date: ISODate('2020-10-20T00:00:00.000Z'),
    students: []
  },
  {
    _id: 302,
    company_name: 'Microsoft',
    date: ISODate('2020-10-28T00:00:00.000Z'),
    students: []
  },    $lookup: {
  {       from: "tasks",
    _id: 303,alField: "_id",
    company_name: 'Amazon',pic_id",
    date: ISODate('2020-11-15T00:00:00.000Z'),
    students: []
  }   },
]..
  
/* Find the number of problems solved by the user in codekata */
task> db.codekata.aggregate([
...   {
...     $group: {
...       _id: "$user_id",
...       total_problems_solved: { $sum: "$problems_solved" }
...     }
...   },
...   {
...     $lookup: {
...       from: "users",
...       localField: "_id",
...       foreignField: "_id",
...       as: "user"
...     }
...   },
...   {
...     $project: {
...       "user.name": 1,
...       total_problems_solved: 1
...     }
...   }
... ]);
[
  { _id: 2, total_problems_solved: 75, user: [] },
  { _id: 1, total_problems_solved: 50, user: [] },
  { _id: 3, total_problems_solved: 40, user: [] },
  { _id: 4, total_problems_solved: 60, user: [] },
  { _id: 5, total_problems_solved: 30, user: [] }
]
  
/* Find all the mentors with mentee counts more than 15 */
task> db.mentors.find({ mentees_count: { $gt: 15 } });
[
  { _id: 401, name: 'John Doe', mentees_count: 20 },
  { _id: 403, name: 'Alex Johnson', mentees_count: 18 }
]

/* Find the number of users who are absent and tasks not submitted between 15 Oct 2020 and 31 Oct 2020 */
task> db.attendance.aggregate([
  {
    $match: {
      date: {
        $gte: ISODate("2020-10-15"),
        $lte: ISODate("2020-10-31")
      },
      attendance: "Absent" // Match only users who were absent
    }
  },
  {
    $lookup: {
      from: "tasks",
      localField: "user_id", // Match user_id from attendance
      foreignField: "topic_id", // Assuming user_id links to topic_id in tasks
      as: "tasks"
    }
  },
  {
    $project: {
      user_id: 1,
      date: 1,
      absent_tasks: {
        $filter: {
          input: "$tasks",
          as: "task",
          cond: { $eq: ["$$task.status", "Pending"] } // Filter only pending tasks
        }
      }
    }
  },
  {
    $match: {
      "absent_tasks.0": { $exists: true } // Ensure there are pending tasks
    }
  }
]);
